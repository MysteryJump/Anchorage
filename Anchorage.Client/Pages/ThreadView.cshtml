@page "/boards/{boardKey}/{threadId}"
@using Anchorage.Shared.Models
@inject HttpClient Http

@if (thread == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>Thread : @thread.Title</h1>
    <h6>&nbsp;<a href="/boards/@thread.BoardKey/">Back to Thread List</a></h6>

    <div style="z-index:-1; margin-bottom:10px">
        <div class="thread-area">
            @{
                var count = 0;
                foreach (var res in thread.Responses)
                {
                    count++;
                    var name = res.Name;
                    if (string.IsNullOrEmpty(name))
                    {
                        name = BoardDefaultName;

                    }
                    <ResponseComponent Author="@res.Author" Body="@res.Body" Mail="@res.Mail" Name="@name" Created="@res.Created" ResponseCount="@count" />
                }
            }
        </div>
        <div class="container" style="padding:0px; margin-top:20px;max-width:none">
            <form>
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <label for="name">Name:</label>
                            <input type="text" class="form-control" id="name" placeholder="@BoardDefaultName" bind="@Name" />
                        </div>
                    </div>
                    <div class="col">
                        <div class="form-group">
                            <label for="mail">Mail:</label>
                            <input type="text" class="form-control" id="mail" placeholder="Optional" bind="@Mail" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <label for="body">Body:</label>
                            <textarea class="form-control" rows="7" id="body" bind="@Body"></textarea>
                        </div>
                    </div>
                </div>
                <button class="btn btn-primary" type="button" onclick="@(async () => await PostResponse())">Submit</button>
            </form>
        </div>

    </div>
}


@functions {
    Thread thread;

    [Parameter]
    private string BoardKey { get; set; }
    [Parameter]
    private string ThreadId { get; set; }
    [Parameter]
    private string BoardDefaultName { get; set; }

    private string Name { get; set; }
    private string Body { get; set; }
    private string Mail { get; set; }

    protected override async Task OnInitAsync()
    {
        thread = await Http.GetJsonAsync<Thread>($"api/boards/{BoardKey}/{ThreadId}");
        var board = await Http.GetJsonAsync<Board>($"api/boards/{BoardKey}");
        BoardDefaultName = board.BoardDefaultName;

    }

    private async Task PostResponse()
    {
        var response = new ClientResponse()
        {
            Body = Body,
            Mail = Mail,
            Name = Name
        };


        await Http.PostJsonAsync<Response>($"api/boards/{BoardKey}/{ThreadId}", response);

        await OnInitAsync();
        Body = String.Empty;
    }

}